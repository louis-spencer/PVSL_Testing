# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'app.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt5 import QtCore, QtGui, QtWidgets
import matplotlib

matplotlib.use('Agg')
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg
from matplotlib.backends.backend_qt5agg import NavigationToolbar2QT
import matplotlib.pyplot as plt


class Ui_MainWindow(object):

    def setupUi(self, MainWindow):
        # 0 for stopped, 1 for running, 2 for paused
        self.testing_status = 0
        # "Run" or "Pause"
        self.run_pause_text = "Run"
        # "Reset" or "Stop"
        self.reset_stop_text = "Reset"

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(895, 631)
        MainWindow.setDockNestingEnabled(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding,
                                           QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.East)
        self.tabWidget.setObjectName("tabWidget")
        self.controls_tab = QtWidgets.QWidget()
        self.controls_tab.setObjectName("controls_tab")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.controls_tab)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.controls_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred,
                                           QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setScaledContents(False)
        self.label.setWordWrap(True)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.test_container = QtWidgets.QVBoxLayout()
        self.test_container.setObjectName("test_container")
        self.run_pause = QtWidgets.QPushButton(self.controls_tab)
        self.run_pause.setObjectName("run_pause")
        # add run_pause functionality
        self.run_pause.clicked.connect(self.run_pause_func)

        self.test_container.addWidget(self.run_pause)
        self.reset_stop = QtWidgets.QPushButton(self.controls_tab)
        self.reset_stop.setObjectName("reset_stop")
        # add reset_stop functionality
        #self.reset_stop.clicked.connect(self.reset_stop_func)

        self.test_container.addWidget(self.reset_stop)
        self.time_remaining = QtWidgets.QLabel(self.controls_tab)
        self.time_remaining.setWordWrap(True)
        self.time_remaining.setObjectName("time_remaining")
        self.test_container.addWidget(self.time_remaining)
        self.verticalLayout.addLayout(self.test_container)
        spacerItem = QtWidgets.QSpacerItem(20, 40,
                                           QtWidgets.QSizePolicy.Minimum,
                                           QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem)
        self.graph_settings_container = QtWidgets.QVBoxLayout()
        self.graph_settings_container.setContentsMargins(-1, 5, -1, 5)
        self.graph_settings_container.setSpacing(0)
        self.graph_settings_container.setObjectName("graph_settings_container")
        self.pressure_checkbox = QtWidgets.QCheckBox(self.controls_tab)
        self.pressure_checkbox.setStyleSheet("")
        self.pressure_checkbox.setIconSize(QtCore.QSize(24, 24))
        self.pressure_checkbox.setChecked(True)
        self.pressure_checkbox.setObjectName("pressure_checkbox")
        self.graph_settings_container.addWidget(self.pressure_checkbox)
        self.temperature_checkbox = QtWidgets.QCheckBox(self.controls_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum,
                                           QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.temperature_checkbox.sizePolicy().hasHeightForWidth())
        self.temperature_checkbox.setSizePolicy(sizePolicy)
        self.temperature_checkbox.setMinimumSize(QtCore.QSize(0, 0))
        self.temperature_checkbox.setChecked(True)
        self.temperature_checkbox.setObjectName("temperature_checkbox")
        self.graph_settings_container.addWidget(self.temperature_checkbox)
        self.legend_checkbox = QtWidgets.QCheckBox(self.controls_tab)
        self.legend_checkbox.setChecked(True)
        self.legend_checkbox.setObjectName("legend_checkbox")
        self.graph_settings_container.addWidget(self.legend_checkbox)
        self.verticalLayout.addLayout(self.graph_settings_container)
        self.export_2 = QtWidgets.QPushButton(self.controls_tab)
        self.export_2.setObjectName("export_2")
        self.verticalLayout.addWidget(self.export_2)
        self.tabWidget.addTab(self.controls_tab, "")
        self.settings_tab = QtWidgets.QWidget()
        self.settings_tab.setObjectName("settings_tab")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.settings_tab)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.settings_description = QtWidgets.QLabel(self.settings_tab)
        self.settings_description.setObjectName("settings_description")
        self.verticalLayout_3.addWidget(self.settings_description)
        self.time_container = QtWidgets.QVBoxLayout()
        self.time_container.setObjectName("time_container")
        self.label_3 = QtWidgets.QLabel(self.settings_tab)
        self.label_3.setObjectName("label_3")
        self.time_container.addWidget(self.label_3)
        self.dateTimeEdit = QtWidgets.QDateTimeEdit(self.settings_tab)
        self.dateTimeEdit.setCalendarPopup(True)
        self.dateTimeEdit.setObjectName("dateTimeEdit")
        self.time_container.addWidget(self.dateTimeEdit)
        self.verticalLayout_3.addLayout(self.time_container)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40,
                                            QtWidgets.QSizePolicy.Minimum,
                                            QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_3.addItem(spacerItem1)
        self.tabWidget.addTab(self.settings_tab, "")
        self.horizontalLayout.addWidget(self.tabWidget)
        self.gridLayout.addLayout(self.horizontalLayout, 0, 4, 1, 1)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setContentsMargins(-1, -1, -1, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")

        # inject matplotlib canvas and figure into PyQt
        #self.canvas = QtWidgets.QGraphicsView(self.centralwidget)
        self.figure = plt.figure()
        self.canvas = FigureCanvasQTAgg(self.figure)

        # inject matplotlib toolbar into PyQt
        #self.toolbar = QtWidgets.QDial(self.centralwidget)
        self.toolbar = NavigationToolbar2QT(self.canvas)
        self.toolbar.setObjectName("toolbar")
        self.verticalLayout_2.addWidget(self.toolbar)

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding,
                                           QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.canvas.sizePolicy().hasHeightForWidth())
        self.canvas.setSizePolicy(sizePolicy)
        self.canvas.setObjectName("canvas")
        self.verticalLayout_2.addWidget(self.canvas)
        self.gridLayout.addLayout(self.verticalLayout_2, 0, 0, 1, 4)
        self.gridLayout.setColumnStretch(0, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # run method once
        self.run_pause_func()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(
            _translate("MainWindow", "Graph and system controls"))
        self.run_pause.setText(_translate("MainWindow", self.run_pause_text))
        self.reset_stop.setText(_translate("MainWindow", "Reset"))
        self.time_remaining.setText(_translate("MainWindow",
                                               "Time Remaining:"))
        self.pressure_checkbox.setText(_translate("MainWindow", "Pressure"))
        self.temperature_checkbox.setText(
            _translate("MainWindow", "Temperature"))
        self.legend_checkbox.setText(_translate("MainWindow", "Legend"))
        self.export_2.setText(_translate("MainWindow", "Export"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.controls_tab),
                                  _translate("MainWindow", "Controls"))
        self.settings_description.setText(
            _translate("MainWindow", "Test and app settings"))
        self.label_3.setText(_translate("MainWindow", "Choose date and time:"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.settings_tab),
                                  _translate("MainWindow", "Settings"))

    def run_pause_func(self):
        if self.testing_status == 1:
            self.run_pause_text = "Pause"
            self.reset_stop_text = "Stop"
            self.testing_status = 2
        else:
            self.run_pause_text = "Run"
            self.reset_stop_text = "Reset"
            self.testing_status = 1
            self.plot()
        self.run_pause.setText(self.run_pause_text)
        self.reset_stop.setText(self.reset_stop_text)

    def plot(self):
        self.figure.clear()
        ax = self.figure.add_subplot(111)
        ax.plot([3, 5, 1, 2, 0], '-')
        self.canvas.draw()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
